<script type="text/javascript">
    mxBasePath = 'Scripts/mxGraph';
</script>
<script type="text/javascript" src="../../../Scripts/mxGraph/js/mxClient.js"></script>

<script type="text/javascript">
    // Program starts here. Creates a sample graph in the
    // DOM node with the specified ID. This function is invoked
    // from the onLoad event handler of the document (see below).
    function main(container) {
        // Checks if the browser is supported
        if (!mxClient.isBrowserSupported()) {
            mxUtils.error('Browser is not supported!', 200, false);
        }
        else {
            // Creates the graph inside the given container
            var graph = new mxGraph(container);

            // Enables rubberband selection
            new mxRubberband(graph);

            // Gets the default parent for inserting new cells. This
            // is normally the first child of the root (ie. layer 0).
            var parent = graph.getDefaultParent();

            graph.getModel().beginUpdate();
            try {
                // bikin struktur organisasi
                $.post("Employee/getEmployeeTree",
                    {
                        "id": 0
                    },
                    function (result) {
                        buildChildren(result, "", graph);
                    });



















//                var v1 = graph.insertVertex(parent, null, 'Hello,', 20, 20, 80, 30);
//                var v2 = graph.insertVertex(parent, null, 'World!', 200, 150, 80, 30);
//                var e1 = graph.insertEdge(parent, null, '', v1, v2);
            }
            finally {
                // Updates the display
                graph.getModel().endUpdate();
            }
        }
    };

    function buildChildren(cell, parent, graph)
    {
        var vParent = graph.insertVertex(graph.getDefaultParent(), null, cell.current.fullname, 20, 20, 80, 30);
        $.each(cell[child], function (index, value) {
            if (parent != "") {
                var e = graph.insertEdge(graph.getDefaultParent(), null, '', parent, vParent);
            }
            buildChildren(cell[child], vParent, graph);
        });
    }

    $(document).ready(function () {
        main(document.getElementById('graphContainer'));
    });
</script>

<div id="graphContainer" style="overflow:hidden;width:100%;height:100%;background:url('editors/images/grid.gif')">
</div>